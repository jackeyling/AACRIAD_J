
CONTENTS
I.		INSTALLATION INSTRUCTIONS FOR SUPPORTED LINUX OS.
II.		STEPS TO INSTALL PACKAGES FROM DVD
III.	COPYRIGHT


I.INSTALLATION INSTRUCTIONS FOR SUPPORTED LINUX OS.
---------------------------------------------------

The type of OS , can be figured out on most Linux systems with the
following command

# lsb_release -a


A. RHEL based OS
=================

The following instructions assume that the user is able to install packages
from the RHEL repositories if not, please take a look at SECTION II for
using the DVD as an instruction medium.

Red Hat® Enterprise Linux/CentOS 7.2, 7.1, 7.0 (32-bit and 64-bit)
Red Hat® Enterprise Linux/CentOS 6.8, 6.7, 6.6 (32-bit and 64-bit)

	1.In order to build the driver from the sources, superuser
	permissions are required.

		$ sudo su

	2.Install the following driver dependency packages and
	reboot the system if necessary

		#yum install kernel kernel-devel kernel-headers gcc

	3.Once the  dependency packages have been installed ,extract
	the driver source code from the source tgz file.

		#tar –xzvf aacraid_source-1.2.1.xxxxx.tgz

	4.After the source is extracted , the aacraid.ko needs to be compiled.
	The command to do that is given below.At the end of the compilation you
	will get an aacraid.ko driver file which is our driver module.

		#make –C /lib/modules/`uname -r`/build M=`pwd` modules

	5.Backup the already existing inbox driver if in case you want to revert at
	a later point of time

		# mv /lib/modules/`uname -r`/kernel/drivers/scsi/aacraid/aacraid.ko \
			 /lib/modules/`uname -r`/kernel/drivers/scsi/aacraid/aacraid.ko.org

	6.Install the created aacraid.ko driver file to its destination so it can
	be  included in the initramfs.

		#cp ./aacraid.ko /lib/modules/`uname -r`/kernel/drivers/scsi/aacraid

	7.To make sure that  the newly installed aacraid.ko modules is included in
	the Linux kernel once it reboots, it needs to be placed into the initramfs
	file. RHEL provides dracut to do it. The command to rebuild initramfs with
	our newly installed  aacraid driver is given below

		#dracut -v -f --add-drivers aacraid

	8.Once the dracut process ends, the system needs to be rebooted to load the
	new initramfs which will contain our newly installed aacraid.ko driver

Red Hat® Enterprise Linux/CentOS 5.11, 5.10 (32-bit and 64-bit)

	1.In order to build the driver from the sources, superuser
	permissions are required.

		$ sudo su

	2.Install the following driver dependency packages and reboot the system if
	necessary

		# yum install kernel kernel-devel kernel-headers gcc

	3.Once the  dependency packages have been installed ,extract the driver
	source code from the source tgz file.

		#tar –xzvf aacraid_source-1.2.1.xxxxx.tgz

	4.After the source is extracted , the aacraid.ko needs to be compiled. The
	command to do that is given below.At the end of the compilation you will
	get an aacraid.ko driver file which is our driver module.

		# make –C /lib/modules/`uname -r`/build M=`pwd` modules

	5.Backup the already existing inbox driver if in case you want to revert at
	a later point of time

		# mv /lib/modules/`uname -r`/kernel/drivers/scsi/aacraid/aacraid.ko \
			 /lib/modules/`uname -r`/kernel/drivers/scsi/aacraid/aacraid.ko.org

	6.Copy the kernel driver file to its destination for including in the
	 initramfs.

		# cp ./aacraid.ko /lib/modules/`uname -r`/kernel/drivers/scsi/aacraid

	7.To make sure that  the newly installed aacraid.ko modules is inlucded in
	the linux kernel once it reboots, it needs to be placed into the initramfs.
	RHEL provides mkinitrd to do it. The command to rebuild initramfs with the
	newly installed  aacraid driver is given below

		# mkinitrd -f -v --preload aacraid /boot/initrd-`uname -r`.img `uname -r

	8.Once the mkinitrd process ends, the system needs to be rebooted to load
	the new initramfs which will contain our newly installed aacraid.ko driver


B. Debian based OS images
=========================

Ubuntu Linux 16.04.x  (32bit and 64bit)
Ubuntu Linux 14.04.x  (32bit and 64bit)
Ubuntu Linux 12.04.x (32bit and 64bit)

	1.In order to build the driver from the sources, superuser permissions are
	required.

		$sudo su

	2.Install the following driver dependency  packages and reboot the system
	if necessary

		# apt-get install build-essential linux-headers-`uname -r`

	3.Once the  dependency packages have been installed ,extract the driver
	source code from the source tgz file.

		# tar –xzvf aacraid_source-1.2.1.xxxxx.tgz

	4.After the source is extracted , the aacraid.ko needs to be compiled. The
	command to do that is given below.At the end of the compilation you will
	get an aacraid.ko driver file which is our driver module.

		# make –C /lib/modules/`uname -r`/build M=`pwd` modules

	5.Backup the already existing inbox driver if in case you want to revert at
	a later point of time

		# mv /lib/modules/`uname -r`/kernel/drivers/scsi/aacraid/aacraid.ko \
			 /lib/modules/`uname -r`/kernel/drivers/scsi/aacraid/aacraid.ko.org

	6.Copy the kernel driver file to its destination for including
	in the initramfs.

		# cp ./aacraid.ko /lib/modules/`uname -r`/kernel/drivers/scsi/aacraid

	7.To make sure that  the newly installed aacraid.ko modules is included in
	the linux kernel once it reboots, it needs to be placed into the initramfs
	file. Ubuntu provides update-initramfs to do it. The command to rebuild
	initramfs with the newly installed  aacraid driver is given below

		#update-initramfs -k `uname -r` -c  -v

	8. Once the mkinitrd process ends, the system needs to be rebooted to
	load the new initramfs which will contain our newly installed aacraid.ko
	driver

C. SUSE base OS images
======================

The following instructions assume that the use is able to install packages
from the RHEL repositories if not, please take a look at APPENDIX.B for
using the DVD as an instruction medium.

SuSE Linux Enterprise Server 12 SP1, SP2 (32-bit and 64-bit)
SuSE Linux Enterprise Server 11 SP4, SP3 (32-bit and 64-bit)

	1.In order to build the driver from the sources, superuser
	permissions are required.

		$ sudo su

	2.Install the following driver  dependency packages
	and reboot the system if necessary

		# zypper install kernel-devel gcc make

	3.Once the  dependency packages have been installed ,extract
	the driver source code from the source tgz file.

		#tar –xvf aacraid_source-1.2.1-xxxxx.tgz

	4.After the source is extracted , the driver aacraid.ko needs to be
	compiled. The command to do that is given below.At the end of the
	compilation you will get an aacraid.ko driver file which is our driver
	module.

		# make –C /lib/modules/`uname -r`/build M=`pwd` modules

	5.Backup the already existing inbox driver if in case you want to revert at
	a later point of time

		# mv /lib/modules/`uname -r`/kernel/drivers/scsi/aacraid/aacraid.ko \
			 /lib/modules/`uname -r`/kernel/drivers/scsi/aacraid/aacraid.ko.org

	6.Copy the kernel driver file to its destination for including into the
	initramfs.

		# cp ./aacraid.ko /lib/modules/`uname -r`/kernel/drivers/scsi/aacraid

	7.To make sure that  the newly installed aacraid.ko modules is  included
	in the linux kernel once it reboots, it needs to be placed into the
	initramfs  file. SLES provides mkinitrd to do it. The command to rebuild
	initramfs with the newly installed  aacraid driver is given below.

		# mkinitrd -v –m aacraid

	8.Once the mkinitrd process ends, the system needs to be rebooted to
	load the new initramfs which contains our  newly installed  aacraid.ko
	driver


II. STEPS TO INSTALL PACKAGES FROM DVD
--------------------------------------

Given below are instructions to install packages from OS installation DVD RHEL
based OS and Sles OS. These steps do not need the systems to have subscriptions,
but rather leverage the DVD's as repositories to install packages from.

A. RHEL based OS
================

THe following steps allow the user to install the packages required to compile
the driver modules from source. The DVD is made into a package repository, from
where yum can get and install packages from.

	1.Since the below steps involve editing and making changes to various system
	files requiring superuser permissions, we need to become superuser
		$ sudo su

	2. First we need to get the name of our installation DVD entry in /dev
	directory. The DVD usually shows up as /dev/srX. The lsscsi command.
	allows us to list all the scsi devices on the system, making it easier
	to find which of them is the DVD disk.
		# lsscsi

	3. Once the name of the DVD is figured out, we need to create a location
	to mount the DVD, lets mount it in /media/iso
		# mkdir /media/iso

	4. After the directory is created, a /etc/fstab entry is required for mount
	command to mount the DVD to the /media/iso directory. The entry in
	/etc/fstab can be given as follows
		/dev/srX   /media/iso   udf,iso9660 noauto,user,ro    0 0

	5.Once the entry is placed in /etc/fstab, we can go ahead and mount the DVD
	using the following command
		# mount /dev/srX

	6.Now for yum to use the packages from the mounted DVD location, we will
	need to create a dvd.repo with the following

		[dvd]
		name=Red Hat Enterprise Linux Installation DVD
		baseurl=file:///media/iso
		enabled=1

	7.Next the GPG keys need to be imported for yum to authenticate the rpm
	packages in the DVD. The following command accomplishes that.
		# rpm --import /media/iso/RPM-GPG*

	8. Once the gpg keys are imported run the following commands to enabled
	the DVD repository.
		# yum repolist
		# yum install

B. SLES based OS
================

	1.Since the below steps involve editing and making changes to various system
	files requiring superuser permissions, we need to become superuser
		$ sudo su

	2.First we need to get the name of our installation DVD entry in /dev
	directory. The DVD usually shows up as /dev/srX. The lsscsi command allows
	us to list all the scsi devices on the system, making it easier
	to find which of them is the DVD disk.
		#lsscsi

	3.Once the name of the DVD is figured out, we need to create a location
	to save the DVD image.
		# mkdir /var/iso

	4.Create an iso image from installation disk,  Once the dvd image is saved
	zypper will use the ISO as an installation service and install the packages
	from it.

		# dd if=/dev/srX of=/var/iso/sles.iso

	5.Once the installation disk is saved as an ISO image, set it as an
	installation servcice (xy z is the sles distribution ID eg 10 sp1)
		# zypper sa “iso:/?iso=/var/iso/sles.iso” “SLES xy spz”

	6.After adding the iso as an installation service, run the following command
	to make sure that it worked.
		# zypper sl


III.COPYRIGHT
-------------
Microsemi Corporation (Nasdaq: MSCC) offers a comprehensive portfolio of
semiconductor and system solutions for communications, defense and security,
aerospace, and industrial markets. Products include high-performance and
radiation-hardened analog mixed-signal integrated circuits, FPGAs, SoCs, and
ASICs; power management products; timing and synchronization devices and
precise time solutions; voice processing devices; RF solutions; discrete
components; enterprise storage and communications solutions; security
technologies and scalable anti-tamper products; Ethernet solutions;
Power-over-Ethernet ICs and midspans; custom design capabilities and services.
Microsemi is headquartered in Aliso Viejo, California and has approximately
4,800 employees world-wide. Learn more at www.microsemi.com.

Microsemi makes no warranty, representation, or guarantee regarding the
information contained herein or the suitability of its products and services
for any particular purpose, nor does Microsemi assume any liability whatsoever
arising out of the application or use of any product or circuit. The products
sold hereunder and any other products sold by Microsemi have been subject to
limited testing and should not be used in conjunction with mission-critical
equipment or applications.Any performance specifications are believed to be
reliable but are not verified, and Buyer must conduct and complete all
performance and other testing of the products, alone and together with, or
installed in, any end-products. Buyer shall not rely on any data and
performance specifications or parameters provided by Microsemi. It is the
Buyer's responsibility to independently determine suitability of any products
and to test and verify the same. The information provided by Microsemi
hereunder is provided "as is, where is" and with all faults, and the  entire
risk associated with such information is entirely with the Buyer. Microsemi
does not grant, explicitly or implicitly, to any party any patent rights,
licenses, or any other IP rights, whether with regard to such information
itself or anything described by such information. Information provided in this
document is proprietary to Microsemi, and Microsemi reserves the right to make
any changes to the information in this document or to any products and services
at any time without notice. The technology discussed in this document may be
protected by one or more patent grants.

Microsemi Corporate Headquarters
One Enterprise, Aliso Viejo,
CA 92656 USA
© 2016 Microsemi Corporation. All rights
reserved. Microsemi and the Microsemi logo
are trademarks of Microsemi Corporation. All
other trademarks and service marks are the
property of their respective owners.